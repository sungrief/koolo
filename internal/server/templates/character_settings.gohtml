{{$topLevelContext := .}}
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="color-scheme" content="dark"/>
    <link rel="stylesheet" href="../assets/css/pico.min.css">
    <link rel="stylesheet" href="../assets/css/custom.css">
    <link rel="stylesheet" href="../assets/css/bootstrap-icons.css">
    <script src="../assets/js/Sortable.min.js"></script>
    <script src="../assets/js/character_settings.js"></script>
    <title>Koolo Settings</title>
</head>
<body>
<main class="container">
    {{ if ne .ErrorMessage "" }}
        <div class="container">
            <div class="row">

   <div class="col">
                    <div class="error-message">
                        {{ .ErrorMessage }}
                    </div>
                </div>
            </div>

       </div>
    {{ end }}
    <div class="notification">
        <h3>General Settings</h3><br>
        <form method="post" autocomplete="off" class="compact-form">
            <label {{ if ne .Supervisor "" }}hidden="hidden" {{ end }}>
                <span>Supervisor name</span>
                <input name="name" placeholder="SuperSorc" value="{{ .Supervisor }}" required/>

          </label>
            <fieldset class="grid">
                <label>
                    Class
                    <select name="characterClass">

    <option value="sorceress" {{ if eq .Config.Character.Class
                        "sorceress" }}selected{{ end }}>Blizzard Sorceress
                        </option>
						<option value="nova" {{ if eq .Config.Character.Class
                        "nova" }}selected{{ end }}>Nova Sorceress

                  </option>
                        <option value="hydraorb" {{ if eq .Config.Character.Class
                        "hydraorb" }}selected{{ end }}>Hydra Orb Sorceress

</option>
                        <option value="lightsorc" {{ if eq .Config.Character.Class
                        "lightsorc" }}selected{{ end }}>Lightning Sorceress
                        </option>

     <option value="fireballsorc" {{ if eq .Config.Character.Class
                        "fireballsorc" }}selected{{ end }}>Fireball Sorceress
                        </option>
            <option value="mule" {{ if eq .Config.Character.Class "mule" }}selected{{ end }}>Mule
                        </option>
                        <option value="hammerdin" {{ if eq .Config.Character.Class
               "hammerdin" }}selected{{ end }}>Hammer Paladin
                        </option>
                        <option value="foh" {{ if eq .Config.Character.Class
                        "foh" }}selected{{ end }}>FOH
Paladin
                        </option>
                        <option value="paladin" {{ if eq .Config.Character.Class
                        "paladin" }}selected{{ end }}>Paladin (Leveling)

     </option>
                        <option value="assassin" {{ if eq .Config.Character.Class
                        "assassin" }}selected{{ end }}>Assassin (Leveling)
                        </option>
                        <option value="necromancer" {{ if eq .Config.Character.Class
                        "necromancer" }}selected{{ end }}>Necromancer (Leveling)
                        </option>
                        <option value="sorceress_leveling" {{ if eq .Config.Character.Class
                        "sorceress_leveling" }}selected{{ end }}>Sorceress (Leveling)
                        </option>
                        <option value="trapsin" {{ if eq .Config.Character.Class

                      "trapsin" }}selected{{ end }}>Lightning Trapsin
                        </option>
                        <option value="mosaic" {{ if eq .Config.Character.Class

   "mosaic" }}selected{{ end }}>Mosaic Assassin
                        </option>
                        <option value="winddruid" {{ if eq .Config.Character.Class
                        "winddruid" }}selected{{ end }}>Tornado Druid
                        </option>
                        <option value="druid_leveling" {{ if eq .Config.Character.Class
                        "druid_leveling" }}selected{{ end }}>Druid (Leveling)
                        </option>
                        <option value="javazon" {{ if eq .Config.Character.Class
                        "javazon" }}selected{{ end }}>Javazon
                        </option>

                <option value="berserker" {{ if eq .Config.Character.Class
                        "berserker" }}selected{{ end }}>Berserk Barbarian
                        </option>
                    </select>

         </label>
                <label>
                    Character name
                    <input name="characterName" placeholder="{{ .Config.CharacterName }}"
                           value="{{ .Config.CharacterName }}"/>

               </label>
                <label>
                    <input type="checkbox" name="isNonLadderChar" {{ if .Config.Game.IsNonLadderChar }}checked{{ end }}/>
                    Non-Ladder
                </label>
            </fieldset>

            <h5>Class-Specific Settings</h5>
            <div id="class-specific-settings">

                <div id="no-settings-message" style="display: none;">
                    No custom settings available for this class.
</div>

                <div class="berserker-barb-options" style="display: none;">
                    <fieldset class="grid">
                        <label>
                            <input type="checkbox" name="characterFindItemSwitch" {{ if .Config.Character.BerserkerBarb.FindItemSwitch }}checked{{ end
}}/>
                            Find Item Switch
                        </label>
                        <label>

      <input type="checkbox" name="barbSkipPotionPickupInTravincal" {{if .Config.Character.BerserkerBarb.SkipPotionPickupInTravincal}}checked{{end}}>
                            Skip potion pickup during Travincal
                        </label>
                    </fieldset>

  </div>

                <div class="nova-sorceress-options" style="display: none;">
                    <fieldset class="grid">
                        <label>
                            Boss Static HP (%)

                         <input type="number" id="novaBossStaticThreshold" name="novaBossStaticThreshold" min="1" max="100" step="1" value="{{ .Config.Character.NovaSorceress.BossStaticThreshold }}">
                        </label>
                    </fieldset>
                </div>

                <div class="blizzard-sorceress-options" style="display: none;">
                    <fieldset class="grid">
                        <label>
                            Use moat trick
                            <input type="checkbox" id="useMoatTrick" name="useMoatTrick" {{ if .Config.Character.BlizzardSorceress.UseMoatTrick }}checked{{ end }}/>
                        </label>
                        <label>
                            Use static on Mephisto
                            <input type="checkbox" id="useStaticOnMephisto" name="useStaticOnMephisto" {{ if .Config.Character.BlizzardSorceress.UseStaticOnMephisto }}checked{{ end }}/>
                        </label>
                    </fieldset>
                </div>

                <div class="sorceress_leveling-options" style="display: none;">
                    <fieldset class="grid">
                        <label>
                            Use moat trick
                            <input type="checkbox" id="useMoatTrick" name="useMoatTrick" {{ if .Config.Character.SorceressLeveling.UseMoatTrick }}checked{{ end }}/>
                        </label>
                        <label>
                            Use static on Mephisto
                            <input type="checkbox" id="useStaticOnMephisto" name="useStaticOnMephisto" {{ if .Config.Character.SorceressLeveling.UseStaticOnMephisto }}checked{{ end }}/>
                        </label>
                    </fieldset>
                </div>



          <div class="mosaic-assassin-options" style="display: none;">
                    <fieldset class="grid">
                        <label>
                            <input type="checkbox" name="mosaicUseTigerStrike" {{ if .Config.Character.MosaicSin.UseTigerStrike }}checked{{ end }}/>

                      Use Tiger Strike
                        </label>
                        <label>

<input type="checkbox" name="mosaicUseCobraStrike" {{ if .Config.Character.MosaicSin.UseCobraStrike }}checked{{ end }}/>
                            Use Cobra Strike
                        </label>
                        <label>

              <input type="checkbox" name="mosaicUseClawsOfThunder" {{ if .Config.Character.MosaicSin.UseClawsOfThunder }}checked{{ end }}/>
                            Use Claws of Thunder
                        </label>

 <label>
                            <input type="checkbox" name="mosaicUseBladesOfIce" {{ if .Config.Character.MosaicSin.UseBladesOfIce }}checked{{ end }}/>
                            Use Blades of Ice
                        </label>

                <label>
                            <input type="checkbox" name="mosaicUseFistsOfFire" {{ if .Config.Character.MosaicSin.UseFistsOfFire }}checked{{ end }}/>
                            Use Fists of Fire

       </label>
                    </fieldset>
                </div>
            </div>

            <fieldset class="grid">
                <label>

    <input type="checkbox" id="characterUseTeleport" name="characterUseTeleport" {{ if .Config.Character.UseTeleport }}checked{{ end }}/>
                    Use teleport when available
                </label>
                <label>
                    <input type="checkbox" name="characterStashToShared" {{ if .Config.Character.StashToShared }}checked{{ end }}/>

                Always stash to shared tab
                </label>
            </fieldset>
            <fieldset class="grid">
                <label>
                    <input type="checkbox" name="useCentralizedPickit"
{{ if .Config.UseCentralizedPickit }}checked{{ end }}/>
                    Use centralized pickit
                </label>
                <label>
                    <input type="checkbox" name="useCainIdentify" {{ if .Config.Game.UseCainIdentify }}checked{{ end }}/>

       Identify with Cain
                </label>
            </fieldset>
            <fieldset class="grid">
                <label>
                    <input type="checkbox" name="interactWithShrines" {{ if .Config.Game.InteractWithShrines }}checked{{ end }}/>

              Interact with shrines
                </label>
                <label>
                    Level until (put 0 for no limit)
                    <input type="number" name="stopLevelingAt" min="0" max="99" placeholder="{{
.Config.Game.StopLevelingAt }}"
                           value="{{ .Config.Game.StopLevelingAt }}"/>
                </label>
            </fieldset>

            <!-- Packet Usage Options -->
            <article style="margin-top: 20px; background-color: #f9f9f9; padding: 15px; border: 4px solid #ffa600;">
                <header><strong>⚠️ USING PACKETS</strong></header>
                <p style="font-size: 0.9em; color: #666;">
                    Enabling these settings directly sends network packets instead of simulating mouse clicks.
                    <strong>Mouse clicking is generally safer</strong> and less detectable.
                    Enable packet usage only if you understand the risks. Disabled by default.
                </p>
                <fieldset class="grid">
                    <label>
                        <input type="checkbox" name="packetCastingUseForItemPickup" {{ if .Config.PacketCasting.UseForItemPickup }}checked{{ end }}/>
                        Use packets for item pickup
                    </label>
                </fieldset>
                <fieldset class="grid">
                    <label>
                        <input type="checkbox" name="packetCastingUseForTpInteraction" {{ if .Config.PacketCasting.UseForTpInteraction }}checked{{ end }}/>
                        Use packets for TP interaction
                    </label>
                    <label style="visibility: hidden;">
                        <!-- Spacer for grid alignment -->
                    </label>
                </fieldset>
            </article>
            </fieldset>
            <fieldset class="grid">
                <label>
            <div
id="clearPathDistContainer" class="conditional-field" {{ if .Config.Character.UseTeleport }}style="display: none;"{{ end }}>
                <div class="walking-radius-container">
                    <label for="clearPathDist">Clear Path Radius</label>
                    <div class="walking-radius-slider">
                        <input

                         type="range"
                                id="clearPathDist"
                                name="clearPathDist"

                     min="0"
                                max="30"
                                step="1"

                 value="{{ if .Config.Character.ClearPathDist }}{{ .Config.Character.ClearPathDist }}{{ else }}12{{ end }}"
                        >
                        <span class="walking-radius-value" id="clearPathDistValue">{{ if .Config.Character.ClearPathDist }}{{ .Config.Character.ClearPathDist }}{{ else }}12{{ end }}</span>

     </div>
                    <div class="input-info">Distance (in game units) to clear enemies while walking through areas</div>
                </div>
            </div>
                </label>
            </fieldset>

    <label>
                Minimum Gold (will pick up Magic+ to sell for gold if below)
                <input min="0" type="number" name="gameMinGoldPickupThreshold"
                       placeholder="{{ .Config.Game.MinGoldPickupThreshold }}"
                       value="{{ .Config.Game.MinGoldPickupThreshold
}}"/>
            </label>
            <h3>Client Settings</h3><br>
            <fieldset class="grid">
                <label>
                    Client launch options (arguments)
                    <input name="commandLineArgs" placeholder="{{
.Config.CommandLineArgs }}"
                           value="{{ .Config.CommandLineArgs }}"/>
                </label>
            </fieldset>
            <fieldset class="grid">
                <label>

       <input id="kill_d2_process" type="checkbox" name="kill_d2_process" {{ if .Config.KillD2OnStop }}checked{{ end }}/>
                    Kill D2 process on bot stop
                </label>
                <label>
                    <input id="classic_mode" type="checkbox" name="classic_mode" {{ if .Config.ClassicMode
}}checked{{ end }}/>
                    Use Classic Mode (Legacy Graphics)
                </label>
                <label>
                    <input id="close_mini_panel" type="checkbox" name="close_mini_panel" {{ if .Config.CloseMiniPanel }}checked{{ end }}/>

       Close the mini panel at game start (Legacy Graphics)
                </label>
                <label>
                    <input id="hide_portraits" type="checkbox" name="hide_portraits" {{ if .Config.HidePortraits }}checked{{ end }}/>
                    Hide Portraits

             </label>

            </fieldset>
            <h3>Battle.net settings</h3><br>
            <fieldset class="grid">
                <label>
                    Username

       <input name="username" placeholder="{{ .Config.Username }}" value="{{ .Config.Username }}"/>
                </label>
                <label>
                    Password
                    <input type="password" name="password" placeholder="{{ .Config.Password }}"

                  value="{{ .Config.Password }}"/>
                </label>
                <label>
                    Realm
                    <select name="realm">

                 <option value="eu.actual.battle.net" {{ if eq .Config.Realm
                        "eu.actual.battle.net" }}selected{{ end }}>Europe
                        </option>
                        <option value="us.actual.battle.net" {{
if eq .Config.Realm
                        "us.actual.battle.net" }}selected{{ end }}>America
                        </option>
                        <option value="kr.actual.battle.net" {{ if eq .Config.Realm

      "kr.actual.battle.net" }}selected{{ end }}>Korea
                        </option>
                    </select>
                </label>
                <label>

     Authentication Method
                    <select name="authmethod">
                        <option value="TokenAuth" {{ if eq .Config.AuthMethod
                        "TokenAuth" }}selected{{ end }}>Auth Token

        </option>
                        <option value="UsernamePassword" {{ if eq .Config.AuthMethod
                        "UsernamePassword" }}selected{{ end }}>Username & Password
                        </option>

              <option value="None" {{ if eq .Config.AuthMethod
                        "None" }}selected{{ end }}>None
                        </option>
                    </select>

      </label>
            </fieldset>
            <fieldset class="grid">
                <label>
                    Authentication Token
                    <input type="password" name="AuthToken" placeholder="{{ .Config.AuthToken }}" value="{{ .Config.AuthToken }}"/>

            </label>
            </fieldset>

            <h3>Scheduler</h3><br>
            <label>Set the time ranges when the bot should Start and Stop automatically.
Multiple time ranges can be set for the same day if you want to simulate breaks.
This will enforce killing of the game client on Stop.</label><br>
            <fieldset class="grid">
                <label>
                    Enabled
                    <input type="checkbox" name="schedulerEnabled" {{ if .Config.Scheduler.Enabled }}checked{{ end }}/>

  </label>
            </fieldset>

            <div id="scheduler-settings" {{ if not .Config.Scheduler.Enabled }}style="display: none;"{{ end }}>
                {{ range $dayIndex := seq 0 6 }}
                    <div class="scheduler-day">

   <h4>{{ index $.DayNames $dayIndex }}</h4>
                        <div class="time-ranges" data-day="{{ $dayIndex }}">
                            {{ $day := index $.Config.Scheduler.Days $dayIndex }}
                            {{ range $timeRange
:= $day.TimeRanges }}
                                <div class="time-range">
                                    <input type="time" name="scheduler[{{ $dayIndex }}][start][]" value="{{ $timeRange.Start.Format "15:04" }}" required>

                <span>to</span>
                                    <input type="time" name="scheduler[{{ $dayIndex }}][end][]" value="{{ $timeRange.End.Format "15:04" }}" required>
                                    <button type="button" class="remove-time-range"><i
class="bi bi-trash"></i></button>
                                </div>
                            {{ end }}
                        </div>

           <button type="button" class="add-time-range" data-day="{{ $dayIndex }}">
                            <i class="bi bi-plus-circle"></i> Add Time Range
                        </button>
                    </div>

         {{ end }}
            </div>

            <br><h3>Health settings</h3><br>
            <fieldset class="grid">
                <label>
                    Healing at (%)

       <input type="number" name="healingPotionAt" min="0" max="99" placeholder="{{ .Config.Health.HealingPotionAt }}"
                           value="{{ .Config.Health.HealingPotionAt }}"/>
                </label>
                <label>
                    Mana at (%)

                 <input type="number" name="manaPotionAt" min="0" max="99" placeholder="{{ .Config.Health.ManaPotionAt }}"
                           value="{{ .Config.Health.ManaPotionAt }}"/>
                </label>
                <label>

     Rejuv at (% of life)
                    <input type="number" name="rejuvPotionAtLife" min="0" max="99" placeholder="{{ .Config.Health.RejuvPotionAtLife }}"
                           value="{{ .Config.Health.RejuvPotionAtLife }}"/>
                </label>
                <label>

                 Rejuv at (% of mana)
                    <input type="number" name="rejuvPotionAtMana" min="0" max="99" placeholder="{{ .Config.Health.RejuvPotionAtMana }}"
                           value="{{ .Config.Health.RejuvPotionAtMana }}"/>
                </label>

         <label>
                    Chicken at (%)
                    <input type="number" name="chickenAt" min="0" max="99" placeholder="{{ .Config.Health.ChickenAt }}"
                           value="{{ .Config.Health.ChickenAt }}"/>

   </label>
            </fieldset>
            <h4>Belt Layout</h4><br>
            <fieldset class="grid">
                {{ range $index, $potionType := .Config.Inventory.BeltColumns }}
                    <label>

       Column {{ $index }}
                        <select name="inventoryBeltColumns[]">
                            <option value="healing" {{ if eq $potionType
                            "healing" }}selected{{ end }}>Healing

                           </option>
                            <option value="mana" {{ if eq $potionType
                            "mana" }}selected{{ end }}>Mana

                   </option>
                            <option value="rejuvenation" {{ if eq $potionType
                            "rejuvenation" }}selected{{ end }}>Rejuvenation

           </option>
                        </select>
                    </label>
                {{ end }}
            </fieldset>
            <h4>Potions in inventory</h4><br>

           <fieldset class="grid">
                <label>
                    Healing potions
                    <input type="number" name="healingPotionCount" min="0" max="99" placeholder="{{ .Config.Inventory.HealingPotionCount }}"

   value="{{ .Config.Inventory.HealingPotionCount }}"/>
                </label>
                <label>
                    Mana Potions
                    <input type="number" name="manaPotionCount" min="0" max="99" placeholder="{{ .Config.Inventory.ManaPotionCount }}"

            value="{{ .Config.Inventory.ManaPotionCount }}"/>
                </label>
                <label>
                    Rejuv Potions
                    <input type="number" name="rejuvPotionCount" min="0" max="99" placeholder="{{ .Config.Inventory.RejuvPotionCount }}"

                     value="{{ .Config.Inventory.RejuvPotionCount }}"/>
                </label>
            </fieldset>
            <h3>Merc Settings</h3><br>
            <label>
                <input id="use_merc" type="checkbox" name="useMerc" {{ if .Config.Character.UseMerc }}checked{{
end }}/>
                Use merc
            </label>
            <fieldset id="merc_health_settings" class="grid">
                <label>
                    Merc healing at (%)

   <input type="number" min="0" max="99" name="mercHealingPotionAt"
                           placeholder="{{ .Config.Health.MercHealingPotionAt }}"
                           value="{{ .Config.Health.MercHealingPotionAt }}"/>
                </label>
                <label>

                 Merc reju at (%)
                    <input type="number" min="0" max="99" name="mercRejuvPotionAt" placeholder="{{ .Config.Health.MercRejuvPotionAt }}"
                           value="{{ .Config.Health.MercRejuvPotionAt }}"/>
                </label>

        <label>
                    Merc chicken at (%)
                    <input type="number" min="0" max="99" name="mercChickenAt" placeholder="{{ .Config.Health.MercChickenAt }}"
                           value="{{ .Config.Health.MercChickenAt }}"/>

   </label>
            </fieldset>
            <h3>Inventory (Checked means locked)</h3>
            <table>
                {{ range $rowIndex, $row := .Config.Inventory.InventoryLock }}
                    <tr>

        {{ range $columnIndex, $unlocked := $row }}
                            <td>
                                <input type="checkbox" name="inventoryLock[{{ $rowIndex }}][{{ $columnIndex }}]"

                   {{ if not $unlocked }}checked{{ end }}/>
                            </td>
                        {{ end }}
                    </tr>

               {{ end }}
            </table>
            <h3>Game Settings</h3><br>
            <label>
                <input type="checkbox" name="createLobbyGames" {{ if .Config.Game.CreateLobbyGames }}checked{{ end }}/>
                Create Lobby Games
            </label><br>
            <fieldset class="grid">
                <label>
                    Game name pattern
                    <input name="companionGameNameTemplate" placeholder="{{ .Config.Companion.GameNameTemplate }}"
                           value="{{ .Config.Companion.GameNameTemplate }}"/>
                </label>
                <label>
                    Game password (leave blank for public games)
                    <input name="companionGamePassword" placeholder="{{ .Config.Companion.GamePassword }}"
                           value="{{ .Config.Companion.GamePassword }}"/>
                </label>
            </fieldset>
            <fieldset class="grid">
                <label>

Game Difficulty
                    <select name="gameDifficulty" id="gameDifficulty">
                        <option value="normal" {{ if eq .Config.Game.Difficulty "normal" }}selected{{ end }}>Normal</option>
                        <option value="nightmare" {{ if eq .Config.Game.Difficulty "nightmare" }}selected{{ end }}>Nightmare</option>

             <option value="hell" {{ if eq .Config.Game.Difficulty "hell" }}selected{{ end }}>Hell</option>
                    </select>
                </label>
                <label>
                    Max game length (seconds)

                 <input name="maxGameLength" min="50" type="number" placeholder="{{ .Config.MaxGameLength }}"
                           value="{{ .Config.MaxGameLength }}"/>
                </label>
            </fieldset>
            <h3>Companion System</h3>
            <br>
            <label>
                <input type="checkbox" name="companionLeader" id="companionLeader" {{ if .Config.Companion.Leader }}checked{{ end }}/>
                Open tp for manual player
            </label>
            <h4>Run Settings</h4><br>
            <label>
                Choose the runs that you want the bot to run.
You can either drag & drop runs below to enable or disable them, or use the + - buttons.
Click on any of the runs to expand them and see more details and options.
</label><br>
            <label>
                <input type="checkbox" name="gameRandomizeRuns" {{ if .Config.Game.RandomizeRuns }}checked{{ end }}/>
                Randomize run order
            </label><br>
            <input type="hidden" id="gameRuns" name="gameRuns" value="">
            <div class="grid">

           <div>
                    <h6>Enabled Runs:</h6>
                    <ul style="padding-top: 52px" class="run-list" id="enabled_runs">
                        {{ range $index, $run := .EnabledRuns }}

              <li value="{{ $run }}">
                                <details>
                                    <summary role="button" class="outline secondary">

                            <span>{{ $run }}</span>
                                        <button type="button" class="remove-run" title="Remove run"><i class="bi bi-dash"></i></button>

            </summary>
                                    {{ executeTemplateByName $run $topLevelContext }}
                                </details>

            </li>
                        {{ end }}
                    </ul>
                </div>
                <div>

          <h6>Disabled Runs:</h6>
                    <input type="text" id="search-disabled-runs" placeholder="Search runs...">
                    <ul class="run-list" id="disabled_runs">
                        {{ range $index, $run := .DisabledRuns }}

               <li value="{{ $run }}">
                                <details>
                                    <summary role="button" class="outline secondary">

                             <span>{{ $run }}</span>
                                        <button type="button" class="add-run" title="Add run"><i class="bi bi-plus"></i></button>

             </summary>
                                    {{ executeTemplateByName $run $topLevelContext }}
                                </details>

             </li>
                        {{ end }}
                    </ul>
                </div>
            </div>
            <h3>Gambling</h3>

           <label>
                <input type="checkbox" name="gamblingEnabled" {{ if .Config.Gambling.Enabled }}checked{{ end }}/>
                Enabled
            </label>

            <h3>Muling</h3>
            <p>Configure automatic muling to transfer items from this character to mule characters. Items will be moved from shared stash tabs (2-4) to the mule's private stash (tab 1).</p>
            <label>
                <input type="checkbox" name="mulingEnabled" id="mulingEnabled" {{ if .Config.Muling.Enabled }}checked{{ end }}/>
                Enable Muling
            </label>

            <div id="mule-settings" style="{{ if not .Config.Muling.Enabled }}display: none;{{ end }}">
                <!-- Farmer: Show mule profile list -->
                <div id="farmer-mule-settings" style="{{ if eq .Config.Character.Class "mule" }}display: none;{{ end }}">
                    <div id="mule-profiles-container">
                        <h6>Mule Characters (in order of use)</h6>
                        <p><small>Select which mule characters to use. Items will be transferred to them in the order listed. After all mules are full, this character will continue farming.</small></p>
                        <div id="mule-profiles-list">
                            {{ range $index, $mule := .Config.Muling.MuleProfiles }}
                            <div class="mule-profile-entry">
                                <select name="mulingMuleProfiles[]" required>
                                    <option value="">-- Select a mule profile --</option>
                                    {{ range $profile := $.AvailableProfiles }}
                                    <option value="{{ $profile }}" {{ if eq $profile $mule }}selected{{ end }}>{{ $profile }}</option>
                                    {{ end }}
                                </select>
                                <button type="button" class="remove-mule-profile secondary" title="Remove this mule">-</button>
                            </div>
                            {{ end }}
                        </div>
                        <button type="button" id="add-mule-profile" class="outline"><i class="bi bi-plus-circle"></i> Add Mule Character</button>
                    </div>
                </div>

                <!-- Mule: Show return to character and info -->
                <div id="mule-character-settings" style="{{ if ne .Config.Character.Class "mule" }}display: none;{{ end }}">
                    <div id="mule-character-info">
                        <p><i class="bi bi-info-circle"></i> <strong>Mule Character</strong><br>
                        This character is configured as a mule. When muling is enabled, this character will receive items from farming characters and store them in the private stash (tab 1).</p>
                    </div>

                    <label>
                        <span>Return to Character (after muling completes)</span>
                        <select name="mulingReturnTo">
                            <option value="">-- Select farming character --</option>
                            {{ range $profile := $.FarmerProfiles }}
                            <option value="{{ $profile }}" {{ if eq $profile $.Config.Muling.ReturnTo }}selected{{ end }}>{{ $profile }}</option>
                            {{ end }}
                        </select>
                        <small>The farming character to switch back to after receiving items.</small>
                    </label>
                </div>
            </div>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    // Store available mule profiles for dynamic dropdown creation
                    const availableMuleProfiles = [
                        {{ range $profile := $.AvailableProfiles }}
                        "{{ $profile }}",
                        {{ end }}
                    ];

                    const mulingEnabledCheckbox = document.getElementById('mulingEnabled');
                    const muleSettings = document.getElementById('mule-settings');
                    const classSelect = document.querySelector('select[name="characterClass"]');
                    const farmerMuleSettings = document.getElementById('farmer-mule-settings');
                    const muleCharacterSettings = document.getElementById('mule-character-settings');

                    // Toggle mule settings visibility based on enabled checkbox
                    if (mulingEnabledCheckbox) {
                        mulingEnabledCheckbox.addEventListener('change', function() {
                            muleSettings.style.display = this.checked ? 'block' : 'none';
                        });
                    }

                    // Toggle between farmer and mule UI based on class
                    function updateMuleUI() {
                        const isMule = classSelect.value === 'mule';
                        if (farmerMuleSettings && muleCharacterSettings) {
                            farmerMuleSettings.style.display = isMule ? 'none' : 'block';
                            muleCharacterSettings.style.display = isMule ? 'block' : 'none';
                        }
                    }

                    if (classSelect) {
                        classSelect.addEventListener('change', updateMuleUI);
                    }

                    // Add new mule profile with dropdown
                    document.getElementById('add-mule-profile')?.addEventListener('click', function() {
                        const list = document.getElementById('mule-profiles-list');
                        const newEntry = document.createElement('div');
                        newEntry.classList.add('mule-profile-entry');

                        // Build options from available mule profiles array
                        let optionsHTML = '<option value="">-- Select a mule profile --</option>';
                        availableMuleProfiles.forEach(function(profile) {
                            if (profile) {
                                optionsHTML += '<option value="' + profile + '">' + profile + '</option>';
                            }
                        });

                        newEntry.innerHTML = '<select name="mulingMuleProfiles[]" required>' + optionsHTML + '</select>' +
                            '<button type="button" class="remove-mule-profile secondary" title="Remove this mule">-</button>';
                        list.appendChild(newEntry);
                    });

                    // Remove mule profile
                    document.getElementById('mule-profiles-list')?.addEventListener('click', function(e) {
                        if (e.target.classList.contains('remove-mule-profile') || e.target.parentElement.classList.contains('remove-mule-profile')) {
                            const button = e.target.classList.contains('remove-mule-profile') ? e.target : e.target.parentElement;
                            button.parentElement.remove();
                        }
                    });
                });
            </script>

          <h3>Cube Recipes</h3>
            <label>
                <input type="checkbox" style="padding-right: 30px" name="enableCubeRecipes" {{ if .Config.CubeRecipes.Enabled }}checked{{ end }}/>
                Enable the bot to automatically cube item recipes.
</label><br>
            <label>
                <input type="checkbox" name="skipPerfectAmethysts" {{ if .Config.CubeRecipes.SkipPerfectAmethysts }}checked{{ end }}/>
                Don't use Perfect Amethysts when rolling charms
            </label><br>
            <label>
                <input type="checkbox"
name="skipPerfectRubies" {{ if .Config.CubeRecipes.SkipPerfectRubies }}checked{{ end }}/>
                Don't use Perfect Rubies when rolling charms
            </label><br>

            <div class="recipe-grid">
                {{ range $index, $recipe := .RecipeList }}
                    <label>

                   <input type="checkbox" name="enabledRecipes" value="{{ $recipe }}" {{ if contains $.Config.CubeRecipes.EnabledRecipes $recipe }}checked{{ end }}>
                        {{ $recipe }}
                    </label>
                {{ end }}

        </div>
            <h3>Back to Town Settings:</h3>
            <fieldset class="grid">
                <label>
                    <input id="no_hp_potions" type="checkbox" name="noHpPotions" {{ if .Config.BackToTown.NoHpPotions }}checked{{ end }}/>

 No HP potions
                </label>
                <label>
                    <input id="no_mp_potions" type="checkbox" name="noMpPotions" {{ if .Config.BackToTown.NoMpPotions }}checked{{ end }}/>
                    No MP potions

  </label>
                <label>
                    <input id="merc_died" type="checkbox" name="mercDied" {{ if .Config.BackToTown.MercDied }}checked{{ end }}/>
                    Mercenary is dead
                </label>

 <label>
                    <input id="equip_broken" type="checkbox" name="equipmentBroken" {{ if .Config.BackToTown.EquipmentBroken }}checked{{ end }}/>
                    Equipment Broken
                </label>
            </fieldset>
            <fieldset class="grid sticky-bottom">

         <a href="/"><input type="button" value="Cancel" class="secondary"/></a>
                <input type="submit" value="Save"/>
            </fieldset>
        </form>
    </div>
</main>
</body>
</html>
