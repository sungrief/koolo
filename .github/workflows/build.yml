name: Koolo Leveling Build CI

on:
  push:
    branches: [main, master, development]
  pull_request:
    branches: [main, master, development]
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    name: "Build Koolo binary"
    runs-on: windows-2022
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Go"
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          check-latest: true

      - name: "Cache Go modules"
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\go-build
            ~\go\pkg\mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: "Install Garble"
        run: |
          go install mvdan.cc/garble@v0.14.2
          Add-Content $env:GITHUB_PATH "$env:USERPROFILE\go\bin"

      - name: "Building Obfuscated artifacts"
        shell: cmd
        run: |
          @echo off
          setlocal enabledelayedexpansion
          set GOGARBLE=!github.com/hectorgimenez/koolo/internal/server*,!github.com/hectorgimenez/koolo/internal/event*,!github.com/inkeliz/gowebview*

          if not exist build mkdir build

          for /f "delims=" %%a in ('powershell -NoProfile -Command "[guid]::NewGuid().ToString()"') do set "BUILD_ID=%%a"
          for /f "delims=" %%b in ('powershell -NoProfile -Command "Get-Date -Format 'o'"') do set "BUILD_TIME=%%b"

          echo Building Koolo with BUILD_ID=%BUILD_ID%

          garble -literals=false -seed=random build -a -trimpath -tags static --ldflags "-s -w -H windowsgui -X main.buildID=%BUILD_ID% -X main.buildTime=%BUILD_TIME% -X github.com/hectorgimenez/koolo/internal/config.Version=%GITHUB_REF_NAME%" -o ".\build\%BUILD_ID%.exe" ./cmd/koolo
          if exist ".\build\%BUILD_ID%.exe" (
            echo Obfuscated build successful
          ) else (
            echo Obfuscated build failed
            exit /b 1
          )

          if exist README.md (
            copy /Y README.md build\ >nul
            if errorlevel 1 (
              echo Failed to copy README.md
              exit /b 1
            )
          )

          if exist tools (
            if exist build\tools rd /s /q build\tools
            xcopy tools build\tools /E /I /Y >nul
            if errorlevel 1 (
              echo Failed to copy tools directory
              exit /b 1
            )
          )

          if not exist build\config mkdir build\config

          if exist config\koolo.yaml.dist (
            copy /Y config\koolo.yaml.dist build\config\koolo.yaml >nul
            if errorlevel 1 (
              echo Failed to copy koolo.yaml.dist
              exit /b 1
            )
          )

          if exist config\Settings.json (
            copy /Y config\Settings.json build\config\Settings.json >nul
            if errorlevel 1 (
              echo Failed to copy Settings.json
              exit /b 1
            )
          )

          if exist config\template (
            if exist build\config\template rd /s /q build\config\template
            xcopy config\template build\config\template /E /I /Y >nul
            if errorlevel 1 (
              echo Failed to copy template directory
              exit /b 1
            )
          )

          endlocal

      - name: "Upload Artifact"
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: koolo-leveling-build
          path: build/

      - name: "Create Release Archive"
        if: startsWith(github.ref, 'refs/tags/')
        shell: pwsh
        run: |
          $version = "${{ github.ref_name }}"
          $zipName = "koolo-leveling-$version.zip"
          Write-Host "Creating release archive: $zipName"
          Compress-Archive -Path ".\build\*" -DestinationPath ".\$zipName" -Force

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "koolo-leveling-${{ github.ref_name }}.zip"
